&config
notrace_passing = 0      ! skip tracing passing prts if notrace_passing=1
nper = 1000              ! number of periods for initial field line
npoiper = 100            ! number of points per period on this field line
ntimstep = 10000         ! number of time steps per slowing down time
ntestpart = 25         ! number of test particles
! bmod_ref = 5d4           ! rescale field to fix Boozer $B_{00}$ on
!                            starting surface to bmod_ref in Gauss -- removed,
!                            now the actual field from VMEC is used one can
!                            rather scale it with vmec_B_scale
trace_time = 1d-3        ! slowing down time, s
sbeg = 0.6d0, 0.7d0     ! starting s (normalized toroidal flux) for particles. The particles will be distributed equally along these flux surfaces.
num_surf = 2             ! number of flux surfaces. Value 0, distributes in volume.
phibeg = 0.d0            ! starting phi for field line
thetabeg = 0.d0          ! starting theta for field line
loopskip = 0             ! loops to skip for random number shift
contr_pp = -1.0d0        ! control of passing particle fraction
facE_al = 1.0            ! test particle energy reduction factor
npoiper2 = 128	         ! points per period for integrator step
n_e = 2                  ! test particle charge number (the same as Z)
n_d = 4                  ! test particle mass number (the same as A)
netcdffile = 'wout.nc'   ! name of VMEC file in NETCDF format
ns_s = 5                 ! spline order for 3D quantities over s variable
ns_tp = 5                ! spline order for 3D quantities over theta and phi
multharm = 5             ! angular grid factor (n_grid=multharm*n_harm_max where n_harm_max - maximum Fourier index
isw_field_type = 0       ! -1: Testing, 0: Canonical, 1: VMEC, 2: Boozer
startmode = 1            ! mode for initial conditions: 0=generate and store, 1=generate, store, and run, 2=read and run, 3=read ANTS and run, 4=read and run a batch
integmode = 1            ! mode for integrator: -1 = RK VMEC, 0 = RK, 1 = Euler1, 2 = Euler2, 3 = Verlet
relerr = 1d-13           ! tolerance for integrator. Set to 1d-13 for symplectic.
tcut = -1d0              ! time when to do cut for classification, usually 1d-1, or -1 if no cuts desired
debug = .False.          ! produce debugging output (.True./.False.). Use only in non-parallel mode!
class_plot = .False.     ! write starting points at phi=const cut for classification plot (.True./.False.)
cut_in_per = 0d0         ! normalized phi-cut position within field period, [0:1], used if class_plot=.True.
fast_class = .False.     ! if .True. quit immeadiately after fast classification and don't trace orbits to the end
vmec_B_scale = 1.0d0     ! factor to scale the B field from VMEC
vmec_RZ_scale = 1.0d0    ! factor to scale the device size from VMEC
swcoll = .False.         ! if .True. enables collisions. This is incompatible with classification.
am1 = 2.0d0,             ! atomic mass of the first background species for collisions
am2 = 3.0d0,             ! atomic mass of the second background species for collisions
Z1 = 1.0d0,              ! charge number of the first background species for collisions
Z2 = 1.0d0,              ! charge number of the second background species for collisions
densi1 = 0.5d14,         ! density of the first background species for collisions (cm^-3)
densi2 = 0.5d14,         ! density of the second background species for collisions (cm^-3)
tempi1 = 1.0d4,          ! temperature of the first background species for collisions (eV)
tempi2 = 1.0d4,          ! temperature of the second background species for collisions (eV)
tempe = 1.0d4            ! electron temperature for collisions (eV)
deterministic = .True.  ! if .True. put seed for the same random walk
old_axis_healing = .True.  ! How to heal VMEC axis. Leave .True. until new version is fully tested.
old_axis_healing_boundary = .True.  ! How to heal VMEC axis. Leave .True. until new version is fully tested.
batch_size = 1000 ! Use only a portion of all particles. Ignored if larger than ntestpart.
ran_seed = 12345   ! Random seed to get batch_size amounts of random indices from ntestpart.
reuse_batch = .False. ! Reuse batch from last run. Previous indices are stored in batch.dat, new batch generated if batch.dat not found.
output_orbits_macrostep = .False. ! Output orbit positions to fort.9XXXX
output_error = .False. ! Output additional error diagnostics
/
