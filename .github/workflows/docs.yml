name: docs

on:
  push:
    branches:
      - "**"
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: docs-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    if: github.ref != 'refs/heads/gh-pages'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install documentation dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r docs/requirements.txt

      - name: Build Sphinx docs
        run: sphinx-build -b html docs docs/_build/html

      - name: Compute destination directory
        id: destination
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            DEST_DIR="previews/pr-${{ github.event.number }}"
          else
            if [ "${GITHUB_REF_NAME}" = "main" ]; then
              DEST_DIR="latest"
            else
              DEST_DIR="branches/${GITHUB_REF_NAME//\//-}"
            fi
          fi
          echo "dest_dir=${DEST_DIR}" >> "$GITHUB_OUTPUT"

      - name: Stage site output
        run: |
          DEST="${{ steps.destination.outputs.dest_dir }}"
          mkdir -p site/"$DEST"
          rsync -a --delete docs/_build/html/ site/"$DEST"/
          cat > site/index.html <<'EOF'
          <!DOCTYPE html>
          <html lang="en">
            <head>
              <meta charset="utf-8" />
              <meta http-equiv="refresh" content="0; url=latest/" />
              <title>SIMPLE Documentation</title>
              <link rel="canonical" href="latest/" />
            </head>
            <body>
              <p>Redirecting to the <a href="latest/">latest SIMPLE documentation</a>â€¦</p>
            </body>
          </html>
          EOF

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    name: Deploy to GitHub Pages
    needs: build
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4
